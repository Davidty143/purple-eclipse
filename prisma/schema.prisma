generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  account_id       String    @id @default(uuid()) @db.Uuid
  account_username String?   @unique
  account_email    String?   @unique
  account_status   AccountStatus? // Make nullable
  account_is_deleted Boolean? // Make nullable
  account_role_id  String?   @db.Uuid  // Foreign Key to Role
  account_role     Role?     @relation(fields: [account_role_id], references: [role_id]) // Make nullable
}

model Role {
  role_id   String         @id @default(uuid()) @db.Uuid
  role_type RoleType?      @unique // Make nullable
  accounts  Account[]     // Make nullable
  previleges Previlage[]  // Make nullable
}

model Previlage {
  previlege_id          String   @id @default(uuid()) @db.Uuid
  previlege_name        String?  // Make nullable
  previlege_description String?  // Make nullable
  roles                 Role[]  // Make nullable
}

enum AccountStatus {
  ACTIVE
  BANNED
  RESTRICTED
  PENDING_VERIFICATION 
}

enum RoleType {
  ADMIN
  USER
  GUEST
}


model Forum {
  forum_id          String    @id @default(uuid()) @db.Uuid
  forum_name        String?   @unique
  forum_description String? 
  forum_is_deleted  Boolean   @default(false)
  forum_created     DateTime  @default(now()) @db.Timestamptz @map("forum_created")
  forum_modified    DateTime  @updatedAt @db.Timestamptz @map("forum_modified")
  
  subforums Subforum[]
}

model Subforum {
  subforum_id          Int       @id @default(autoincrement())
  subforum_name        String?   @unique
  subforum_description String? 
  subforum_isDeleted   Boolean   @default(false) @map("subforum_is_deleted")
  subforum_createdAt   DateTime  @default(now()) @db.Timestamptz @map("subforum_created")
  subforum_updatedAt   DateTime  @updatedAt @db.Timestamptz @map("subforum_modified")
  
  forum    Forum    @relation(fields: [forum_id], references: [forum_id])
  forum_id String   @map("forum_id") @db.Uuid
}